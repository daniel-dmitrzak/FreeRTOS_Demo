#!/usr/bin/env python
# -*- coding: CP1250 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Thu Oct 17 17:40:39 2013
#

import wx
import serial
import os

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

port = ""

class MyFrame3(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame3.__init__
        porty = list_serial_ports()
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.MAXIMIZE_BOX | wx.SYSTEM_MENU | wx.RESIZE_BORDER | wx.NO_BORDER | wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, _("Ustawienia portu COM"))
        self.choice_1 = wx.Choice(self.panel_1, wx.ID_ANY, choices=porty)
        self.button_1 = wx.Button(self.panel_1, wx.ID_ANY, _("Polacz"))
        self.button_1.Bind(wx.EVT_TOGGLEBUTTON, self.changePort)
        self.static_line_10 = wx.StaticLine(self.panel_1, wx.ID_ANY, style=wx.LI_VERTICAL)
        self.label_5 = wx.StaticText(self.panel_1, wx.ID_ANY, _("Diody"))
        self.panel_2 = wx.Panel(self.panel_1, wx.ID_ANY)
        self.button_23 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED3"))
        self.button_24 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED4"))
        self.button_25 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED5"))
        self.button_26 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED6"))
        self.button_27 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED7"))
        self.button_28 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED8"))
        self.button_29 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED9"))
        self.button_30 = wx.ToggleButton(self.panel_1, wx.ID_ANY, _("LED10"))
        self.static_line_11 = wx.StaticLine(self.panel_1, wx.ID_ANY, style=wx.LI_VERTICAL)
        self.label_3 = wx.StaticText(self.panel_1, wx.ID_ANY, _("Temperatura"))
        self.text_ctrl_5 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.button_2 = wx.Button(self.panel_1, wx.ID_ANY, _("Odczyt"))
        self.static_line_12 = wx.StaticLine(self.panel_1, wx.ID_ANY, style=wx.LI_VERTICAL)
        self.label_6 = wx.StaticText(self.panel_1, wx.ID_ANY, _("Tekst"))
        self.text_ctrl_3 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER | wx.TE_MULTILINE)
        self.button_3 = wx.Button(self.panel_1, wx.ID_ANY, _("Wyslij"))
        self.text_ctrl_4 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER | wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame3.__set_properties
        self.SetTitle(_("STM32 Demo"))
        self.SetSize((804, 189))
        self.text_ctrl_3.SetMinSize((170, 35))
        self.text_ctrl_4.SetMinSize((170, 35))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame3.__do_layout
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 0, 0)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.label_1, 0, wx.TOP | wx.BOTTOM, 20)
        sizer_2.Add(self.choice_1, 0, wx.BOTTOM, 10)
        sizer_2.Add(self.button_1, 0, 0, 0)
        sizer_1.Add(sizer_2, 1, wx.LEFT | wx.ALIGN_CENTER_HORIZONTAL, 10)
        sizer_1.Add(self.static_line_10, 0, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)
        grid_sizer_1.Add(self.label_5, 0, wx.TOP | wx.BOTTOM, 20)
        grid_sizer_1.Add(self.panel_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_23, 0, 0, 0)
        grid_sizer_1.Add(self.button_24, 0, wx.LEFT, 3)
        grid_sizer_1.Add(self.button_25, 0, 0, 0)
        grid_sizer_1.Add(self.button_26, 0, wx.LEFT, 3)
        grid_sizer_1.Add(self.button_27, 0, 0, 0)
        grid_sizer_1.Add(self.button_28, 0, wx.LEFT, 3)
        grid_sizer_1.Add(self.button_29, 0, wx.BOTTOM, 20)
        grid_sizer_1.Add(self.button_30, 0, wx.LEFT, 3)
        sizer_1.Add(grid_sizer_1, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_1.Add(self.static_line_11, 0, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)
        sizer_4.Add(self.label_3, 0, wx.TOP, 20)
        sizer_4.Add(self.text_ctrl_5, 0, wx.TOP, 10)
        sizer_4.Add(self.button_2, 0, wx.TOP, 10)
        sizer_1.Add(sizer_4, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_1.Add(self.static_line_12, 0, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)
        sizer_7.Add(self.label_6, 0, wx.TOP, 20)
        sizer_7.Add(self.text_ctrl_3, 0, wx.RIGHT | wx.TOP | wx.EXPAND, 10)
        sizer_7.Add(self.button_3, 0, wx.TOP | wx.BOTTOM, 5)
        sizer_7.Add(self.text_ctrl_4, 0, wx.RIGHT | wx.EXPAND, 10)
        sizer_1.Add(sizer_7, 1, wx.ALIGN_CENTER_HORIZONTAL, 1)
        self.panel_1.SetSizer(sizer_1)
        sizer_5.Add(self.panel_1, 1, 0, 0)
        self.SetSizer(sizer_5)
        self.Layout()
        self.Centre()
        # end wxGlade

    def changePort(self):
        print "Zmieniam port"

def list_serial_ports():
    # Windows
    if os.name == 'nt':
        # Szukaj dostêpnych portów COM
        available = []
        for i in range(10):
            try:
                s = serial.Serial(i)
                available.append('COM'+str(i + 1))
                s.close()
            except serial.SerialException:
                pass
            except ValueError:
                pass
        return available
    else:
        # Mac / Linux
        return [port[0] for port in list_ports.comports()]        

# end of class MyFrame3
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_4 = MyFrame3(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_4)
    frame_4.Show()
    app.MainLoop()
